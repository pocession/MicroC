}
return(df_final)
}
interaction_count_list <- list()
for (i in 1:nrow(sample_df)) {
file <- here::here(input_dir, file_list[i])
interaction_count_list[[sample_df[i,]$sample]] <- .generateInteractionMatrixCount(file,start_index_file)
}
View(interaction_count_list)
file <- here::here(input_dir, sample_df[i,]$file)
df <- read.csv(file, header = FALSE)
View(df)
df <- read.csv(file, header = FALSE)
df <- df[2:nrow(df),2:ncol(df)]
df_final <- data.frame(matrix(nrow=length(start_position_index)^2, ncol=2))
colnames(df_final) <- c("interaction_index", "count")
interaction_index_list <- list()
for (i in  1:length(start_position_index)) {
for (j in 1:length(start_position_index)) {
interaction_index_list[[paste0(start_position_index[i], "-", start_position_index[j])]] <- df[i,j]
}
}
for (i in 1:length(interaction_index_list)) {
df_final[i,]$interaction_index <- names(interaction_index_list[i])
df_final[i,]$count <- as.numeric(interaction_index_list[i][[1]])
}
return(df_final)
View(df_final)
.generateInteractionMatrixCount <- function(file, start_position_index) {
df <- read.csv(file, header = FALSE)
df <- df[2:nrow(df),2:ncol(df)]
df_final <- data.frame(matrix(nrow=length(start_position_index)^2, ncol=2))
colnames(df_final) <- c("interaction_index", "count")
interaction_index_list <- list()
for (i in  1:length(start_position_index)) {
for (j in 1:length(start_position_index)) {
interaction_index_list[[paste0(start_position_index[i], "-", start_position_index[j])]] <- df[i,j]
}
}
for (i in 1:length(interaction_index_list)) {
df_final[i,]$interaction_index <- names(interaction_index_list[i])
df_final[i,]$count <- as.numeric(interaction_index_list[i][[1]])
}
return(df_final)
}
# input dir --------------------------------------------------------------------
input_dir <- here::here("./Results/processing")
# Sample df --------------------------------------------------------------------
## Create a sample dataframe for describing the experiment conditions
file_list <- list.files(input_dir)
sample_df <- data.frame(file = file_list)
sample_df <- sample_df |>
tidyr::separate(file, c("id1", "donor", "condition", "id2"), remove = FALSE) |>
dplyr::mutate(sample = paste0(donor, "_", condition))
# Generate the interaction count file ------------------------------------------
## Get the start position index
start_index_file <- here::here(input_dir, "start_position_index.txt")
start_position_index <- readLines(start_index_file, n = -1)
interaction_count_list <- list()
for (i in 1:nrow(sample_df)) {
file <- here::here(input_dir, sample_df[i,]$file)
interaction_count_list[[sample_df[i,]$sample]] <- .generateInteractionMatrixCount(file,start_index_file)
}
.generateInteractionMatrixCount <- function(file, start_position_index) {
df <- read.csv(file, header = FALSE)
df <- df[2:nrow(df),]
df <- df[,2:ncol(df)]
df_final <- data.frame(matrix(nrow=length(start_position_index)^2, ncol=2))
colnames(df_final) <- c("interaction_index", "count")
interaction_index_list <- list()
for (i in  1:length(start_position_index)) {
for (j in 1:length(start_position_index)) {
interaction_index_list[[paste0(start_position_index[i], "-", start_position_index[j])]] <- df[i,j]
}
}
for (i in 1:length(interaction_index_list)) {
df_final[i,]$interaction_index <- names(interaction_index_list[i])
df_final[i,]$count <- as.numeric(interaction_index_list[i][[1]])
}
return(df_final)
}
interaction_count_list <- list()
for (i in 1:nrow(sample_df)) {
file <- here::here(input_dir, sample_df[i,]$file)
interaction_count_list[[sample_df[i,]$sample]] <- .generateInteractionMatrixCount(file,start_index_file)
}
View(sample_df)
file_list <- list.files(input_dir, pattern = "\\.csv$", full.names = TRUE)
sample_df <- data.frame(file = file_list)
sample_df <- sample_df |>
tidyr::separate(file, c("id1", "donor", "condition", "id2"), remove = FALSE) |>
dplyr::mutate(sample = paste0(donor, "_", condition))
View(sample_df)
file_list <- list.files(input_dir, pattern = "\\.csv$")
file_list <- list.files(input_dir, pattern = "\\.csv$")
sample_df <- data.frame(file = file_list)
sample_df <- sample_df |>
tidyr::separate(file, c("id1", "donor", "condition", "id2"), remove = FALSE) |>
dplyr::mutate(sample = paste0(donor, "_", condition))
View(sample_df)
start_index_file <- here::here(input_dir, "start_position_index.txt")
start_position_index <- readLines(start_index_file, n = -1)
interaction_count_list <- list()
for (i in 1:nrow(sample_df)) {
file <- here::here(input_dir, sample_df[i,]$file)
print(file)
interaction_count_list[[sample_df[i,]$sample]] <- .generateInteractionMatrixCount(file,start_index_file)
}
View(interaction_count_list)
i <- 1
file <- here::here(input_dir, sample_df[i,]$file)
.generateInteractionMatrixCount(file,start_index_file)
df <- read.csv(file, header = FALSE)
.generateInteractionMatrixCount <- function(file, start_position_index) {
df <- read.csv(file, header = FALSE)
df <- df[2:nrow(df),]
df <- df[,2:ncol(df)]
df_final <- data.frame(matrix(nrow=length(start_position_index)^2, ncol=2))
colnames(df_final) <- c("interaction_index", "count")
interaction_index_list <- list()
for (i in  1:length(start_position_index)) {
for (j in 1:length(start_position_index)) {
interaction_index_list[[paste0(start_position_index[i], "-", start_position_index[j])]] <- df[i,j]
}
}
for (i in 1:length(interaction_index_list)) {
df_final[i,]$interaction_index <- names(interaction_index_list[i])
df_final[i,]$count <- as.numeric(interaction_index_list[i][[1]])
}
return(df_final)
}
df <- read.csv(file, header = FALSE)
df <- df[2:nrow(df),]
df <- df[,2:ncol(df)]
df_final <- data.frame(matrix(nrow=length(start_position_index)^2, ncol=2))
colnames(df_final) <- c("interaction_index", "count")
interaction_index_list <- list()
for (i in  1:length(start_position_index)) {
for (j in 1:length(start_position_index)) {
interaction_index_list[[paste0(start_position_index[i], "-", start_position_index[j])]] <- df[i,j]
}
}
for (i in 1:length(interaction_index_list)) {
df_final[i,]$interaction_index <- names(interaction_index_list[i])
df_final[i,]$count <- as.numeric(interaction_index_list[i][[1]])
}
View(df_final)
.generateInteractionMatrixCount <- function(file, start_position_index) {
df <- read.csv(file, header = FALSE)
df <- df[2:nrow(df),]
df <- df[,2:ncol(df)]
df_final <- data.frame(matrix(nrow=length(start_position_index)^2, ncol=2))
colnames(df_final) <- c("interaction_index", "count")
interaction_index_list <- list()
for (i in  1:length(start_position_index)) {
for (j in 1:length(start_position_index)) {
interaction_index_list[[paste0(start_position_index[i], "-", start_position_index[j])]] <- df[i,j]
}
}
remove(i,j)
for (i in 1:length(interaction_index_list)) {
df_final[i,]$interaction_index <- names(interaction_index_list[i])
df_final[i,]$count <- as.numeric(interaction_index_list[i][[1]])
}
remove(i)
return(df_final)
}
View(df)
View(sample_df)
View(df_final)
View(df)
.generateInteractionMatrixCount <- function(file, start_position_index) {
df <- read.csv(file, header = FALSE)
df <- df[2:nrow(df),]
df <- df[,2:ncol(df)]
df_final <- data.frame(matrix(nrow=length(start_position_index)^2, ncol=2))
colnames(df_final) <- c("interaction_index", "count")
interaction_index_list <- list()
for (i in  1:length(start_position_index)) {
for (j in 1:length(start_position_index)) {
interaction_index_list[[paste0(start_position_index[i], "-", start_position_index[j])]] <- df[i,j]
}
}
remove(i,j)
for (i in 1:length(interaction_index_list)) {
df_final[i,]$interaction_index <- names(interaction_index_list[i])
df_final[i,]$count <- as.numeric(interaction_index_list[i][[1]])
}
remove(i)
return(df_final)
}
df_tmp <- .generateInteractionMatrixCount(file, start_position_index)
sample <- sample_df[i,]$sample
sample <- sample_df$sample[i]
i <- 1
i <- 1
file <- here::here(input_dir, sample_df[i,]$file)
sample <- sample_df[i,]$sample
norw(sample_df)
nrow(sample_df)
interaction_count_list <- list()
for (i in 1:nrow(sample_df)) {
file <- here::here(input_dir, sample_df[i,]$file)
sample <- sample_df[i,]$sample
interaction_count_list[[sample]] <- .generateInteractionMatrixCount(file,start_index_file)
}
View(interaction_count_list)
interaction_count_list <- list()
for (i in 1:nrow(sample_df)) {
file <- here::here(input_dir, sample_df[i,]$file)
sample <- sample_df[i,]$sample
df_tmp <- .generateInteractionMatrixCount(file,start_index_file)
}
interaction_count_list <- list()
for (i in 1:nrow(sample_df)) {
file <- here::here(input_dir, sample_df[i,]$file)
sample <- sample_df[i,]$sample
interaction_count_list[[sample]] <- .generateInteractionMatrixCount(file,start_index_file)
}
df_tmp <- .generateInteractionMatrixCount(file,start_index_file)
View(df_tmp)
file
interaction_count_list <- list()
for (i in 1:nrow(sample_df)) {
file <- here::here(input_dir, sample_df[i,]$file)
sample <- sample_df[i,]$sample
interaction_count_list[[sample]] <- .generateInteractionMatrixCount(file,start_position_index)
}
remove(i, file, sample)
count <- as.data.frame(matrix(nrow=length(start_position_index^2), ncol=nrow(sample_df)))
count <- as.data.frame(matrix(nrow=length(start_position_index)^2, ncol=nrow(sample_df)))
View(count)
View(interaction_count_list)
row.names(count) <- interaction_count_list[[1]]$interaction_index
View(count)
for (i in 1:length(interaction_count_list)) {
count <- cbind(count, interaction_count_list[[i]]$count)
}
View(count)
count <- as.data.frame(matrix(nrow=length(start_position_index)^2, ncol=nrow(sample_df)))
row.names(count) <- interaction_count_list[[1]]$interaction_index
for (i in 1:length(interaction_count_list)) {
count[,i] <- cbind(count, interaction_count_list[[i]]$count)
}
count <- as.data.frame(matrix(nrow=length(start_position_index)^2, ncol=0))
row.names(count) <- interaction_count_list[[1]]$interaction_index
for (i in 1:length(interaction_count_list)) {
count <- cbind(count, interaction_count_list[[i]]$count)
}
View(count)
View(count)
View(interaction_count_list)
View(interaction_index_list)
View(interaction_count_list)
count <- as.data.frame(matrix(nrow=length(start_position_index)^2, ncol=0))
row.names(count) <- interaction_count_list[[1]]$interaction_index
for (i in 1:length(interaction_count_list)) {
count <- cbind(count, interaction_count_list[[i]]$count)
colnames(count)[i] <- names(interaction_count_list[[i]])
}
View(count)
names(interaction_count_list[[1]])
View(interaction_count_list)
names(interaction_count_list)
count <- as.data.frame(matrix(nrow=length(start_position_index)^2, ncol=0))
row.names(count) <- interaction_count_list[[1]]$interaction_index
for (i in 1:length(interaction_count_list)) {
count <- cbind(count, interaction_count_list[[i]]$count)
colnames(count)[i] <- names(interaction_count_list)[i]
}
View(count)
View(interaction_count_list)
View(df_tmp)
View(interaction_count_list)
View(interaction_count_list)
count <- as.data.frame(matrix(nrow=length(start_position_index)^2, ncol=0))
row.names(count) <- interaction_count_list[[1]]$interaction_index
for (i in 1:nrow(sample_df)) {
sample <- sample_df[i,]$sample
df_tmp <- interaction_count_list[[sample]]
df_tmp <- df_tmp$count
rownames(df_tmp) <- interaction_count_list[[sample]]$interaction_index
colnames(df_tmp) <- sample
count <- count |>
dplyr::left_join(df_tmp, by = "row.names")
}
i <- 1
sample <- sample_df[i,]$sample
df_tmp <- interaction_count_list[[sample]]
df_tmp <- df_tmp$count
rownames(df_tmp) <- interaction_count_list[[sample]]$interaction_index
i <- 1
sample <- sample_df[i,]$sample
df_tmp <- interaction_count_list[[sample]]
df_tmp <- data.frame(df_tmp$count)
View(df_tmp)
count <- as.data.frame(matrix(nrow=length(start_position_index)^2, ncol=1))
count[1,] <- interaction_count_list[[1]]$interaction_index
count <- as.data.frame(matrix(nrow=length(start_position_index)^2, ncol=1))
count[,1] <- interaction_count_list[[1]]$interaction_index
View(count)
count <- as.data.frame(matrix(nrow=length(start_position_index)^2, ncol=1))
count[,1] <- interaction_count_list[[1]]$interaction_index
colnames(count) <- "interaction_index"
count <- as.data.frame(matrix(nrow=length(start_position_index)^2, ncol=1))
count[,1] <- interaction_count_list[[1]]$interaction_index
colnames(count) <- "interaction_index"
for (i in 1:nrow(sample_df)) {
sample <- sample_df[i,]$sample
df_tmp <- interaction_count_list[[sample]]
count <- count |>
dplyr::left_join(df_tmp, by = "interaction_index")
}
count <- as.data.frame(matrix(nrow=length(start_position_index)^2, ncol=1))
count[,1] <- interaction_count_list[[1]]$interaction_index
colnames(count) <- "interaction_index"
for (i in 1:nrow(sample_df)) {
sample <- sample_df[i,]$sample
df_tmp <- interaction_count_list[[sample]]
colanems("interaction_index", sample)
count <- count |>
dplyr::left_join(df_tmp, by = "interaction_index")
}
count <- as.data.frame(matrix(nrow=length(start_position_index)^2, ncol=1))
count[,1] <- interaction_count_list[[1]]$interaction_index
colnames(count) <- "interaction_index"
for (i in 1:nrow(sample_df)) {
sample <- sample_df[i,]$sample
df_tmp <- interaction_count_list[[sample]]
colnames("interaction_index", sample)
count <- count |>
dplyr::left_join(df_tmp, by = "interaction_index")
}
count <- as.data.frame(matrix(nrow=length(start_position_index)^2, ncol=1))
count[,1] <- interaction_count_list[[1]]$interaction_index
colnames(count) <- "interaction_index"
for (i in 1:nrow(sample_df)) {
sample <- sample_df[i,]$sample
df_tmp <- interaction_count_list[[sample]]
colnames(df_tmp) <- c("interaction_index", sample)
count <- count |>
dplyr::left_join(df_tmp, by = "interaction_index")
}
count <- as.data.frame(matrix(nrow=length(start_position_index)^2, ncol=1))
count[,1] <- interaction_count_list[[1]]$interaction_index
colnames(count) <- "interaction_index"
for (i in 1:nrow(sample_df)) {
sample <- sample_df[i,]$sample
df_tmp <- interaction_count_list[[sample]]
colnames(df_tmp) <- c("interaction_index", sample)
count <- count |>
dplyr::left_join(df_tmp, by = "interaction_index")
}
remove(i, df_tmp)
rownames(count) <- count$interaction_index
count <- count |>
dplyr::select(-c(interaction_index))
sample_df_subset <- sample_df |>
dplyr::filter(donor == "A")
count_subset <- count[ , grepl("A" , names(count))]
View(count_subset)
remove(i, df_tmp)
View(sample_df_subset)
dds <- DESeqDataSetFromMatrix(countData=count_subset,
colData=sample_df_subset,
design=~condition, tidy = TRUE)
View(count)
count <- as.data.frame(matrix(nrow=length(start_position_index)^2, ncol=1))
View(count)
count[,1] <- interaction_count_list[[1]]$interaction_index
colnames(count) <- "interaction_index"
for (i in 1:nrow(sample_df)) {
sample <- sample_df[i,]$sample
df_tmp <- interaction_count_list[[sample]]
colnames(df_tmp) <- c("interaction_index", sample)
count <- count |>
dplyr::left_join(df_tmp, by = "interaction_index")
}
remove(i, df_tmp)
rownames(count) <- count$interaction_index
count <- count |>
dplyr::select(-c(interaction_index))
sample_df_subset <- sample_df |>
dplyr::filter(donor == "A")
count_subset <- count[ , grepl("A" , names(count))]
View(count_subset)
dds <- DESeqDataSetFromMatrix(countData=count_subset,
colData=sample_df_subset,
design=~condition, tidy = TRUE)
unique_row_name <- unique(rownames(count_subset))
sample_df_subset <- sample_df |>
dplyr::filter(donor == "A")
count_subset <- round(count[ , grepl("A" , names(count))])
View(count_subset)
View(count)
dds <- DESeqDataSetFromMatrix(countData=count_subset,
colData=sample_df_subset,
design=~condition, tidy = TRUE)
View(count_subset)
rownames(count) <- make.names(count, unique = TRUE)
count <- as.data.frame(matrix(nrow=length(start_position_index)^2, ncol=1))
count[,1] <- interaction_count_list[[1]]$interaction_index
colnames(count) <- "interaction_index"
for (i in 1:nrow(sample_df)) {
sample <- sample_df[i,]$sample
df_tmp <- interaction_count_list[[sample]]
colnames(df_tmp) <- c("interaction_index", sample)
count <- count |>
dplyr::left_join(df_tmp, by = "interaction_index")
}
remove(i, df_tmp)
count <- count |>
dplyr::select(-c(interaction_index))
sample_df_subset <- sample_df |>
dplyr::filter(donor == "A")
count_subset <- round(count[ , grepl("A" , names(count))])
dds <- DESeqDataSetFromMatrix(countData=count_subset,
colData=sample_df_subset,
design=~condition, tidy = TRUE)
count <- as.data.frame(matrix(nrow=length(start_position_index)^2, ncol=1))
count[,1] <- interaction_count_list[[1]]$interaction_index
colnames(count) <- "interaction_index"
for (i in 1:nrow(sample_df)) {
sample <- sample_df[i,]$sample
df_tmp <- interaction_count_list[[sample]]
colnames(df_tmp) <- c("interaction_index", sample)
count <- count |>
dplyr::left_join(df_tmp, by = "interaction_index")
}
remove(i, df_tmp)
rownames(count) <- count$interaction_index
count <- count |>
dplyr::select(-c(interaction_index))
# Perform differential analysis ------------------------------------------------
## BG
sample_df_subset <- sample_df |>
dplyr::filter(donor == "A")
count_subset <- round(count[ , grepl("A" , names(count))])
rownames(sample_df_subset) <- colnames(count_subset)
dds <- DESeqDataSetFromMatrix(countData=count_subset,
colData=sample_df_subset,
design=~condition, tidy = TRUE)
dds <- DESeqDataSetFromMatrix(countData=count_subset,
colData=sample_df_subset,
design=~condition)
dds <- DESeq(dds)
sample_df_subset <- sample_df |>
dplyr::filter(donor == "A")
count_subset <- round(count[ , grepl("A" , names(count))])
rownames(sample_df_subset) <- colnames(count_subset)
dds <- DESeqDataSetFromMatrix(countData=count_subset,
colData=sample_df_subset,
design=~ 1)
dds <- DESeq(dds)
res <- results(dds)
View(res)
res <- res[order(res$padj),]
View(res)
res <- as.data.frame(res[order(res$padj),])
sig_num <- res  |>
dplyr::filter(padj < 0.05) |>
dplyr::filter(abs(log2FoldChange)>1)
output_dir <- here::here("./Results/DIR")
condition <- "bg"
write.csv(res, here::here(output_dir, paste0("DIRs_", donor, "_", condition, ".csv")))
donor <- "A"
write.csv(res, here::here(output_dir, paste0("DIRs_", donor, "_", condition, ".csv")))
condition <- "lps"
donor <- "C"
sample_df_subset <- sample_df |>
dplyr::filter(donor == donor)
count_subset <- round(count[ , grepl("A" , names(count))])
rownames(sample_df_subset) <- colnames(count_subset)
condition <- "lps"
donor <- "C"
sample_df_subset <- sample_df |>
dplyr::filter(donor == donor)
count_subset <- round(count[ , grepl(donor , names(count))])
rownames(sample_df_subset) <- colnames(count_subset)
View(sample_df)
condition <- "lps"
donor <- "C"
sample_df_subset <- sample_df |>
dplyr::filter(donor == donor)
count_subset <- round(count[ , grepl(donor , names(count))])
View(count_subset)
View(sample_df)
View(sample_df_subset)
condition <- "lps"
donor <- "C"
sample_df_subset <- sample_df |>
dplyr::filter(donor == !!donor)
count_subset <- round(count[ , grepl(donor , names(count))])
rownames(sample_df_subset) <- colnames(count_subset)
dds <- DESeqDataSetFromMatrix(countData=count_subset,
colData=sample_df_subset,
design=~ 1) # only one replicate
dds <- DESeq(dds)
res <- results(dds)
res <- as.data.frame(res[order(res$padj),])
write.csv(res, here::here(output_dir, paste0("DIRs_", donor, "_", condition, ".csv")))
sig_num <- res  |>
dplyr::filter(padj < 0.05) |>
dplyr::filter(abs(log2FoldChange)>1)
View(sig_num)
sig_num <- res  |>
dplyr::filter(padj < 0.05) |>
dplyr::filter(log2FoldChange>1 || log2FoldChange<-1)
sig_num <- res  |>
dplyr::filter(padj < 0.05) |>
dplyr::filter(log2FoldChange>1 | log2FoldChange<-1)
View(res)
